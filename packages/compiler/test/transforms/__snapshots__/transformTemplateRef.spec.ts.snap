// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: template ref transform > dynamic ref 1`] = `
"
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = t0()
  let r0
  _renderEffect(() => r0 = _setTemplateRef(n0, foo, r0))
  return n0
"
`;

exports[`compiler: template ref transform > function ref 1`] = `
"
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = t0()
  let r0
  _renderEffect(() => r0 = _setTemplateRef(n0, bar => {
        foo.value = bar
        ;({ baz: baz } = bar)
        console.log(foo.value, baz)
      }, r0))
  return n0
"
`;

exports[`compiler: template ref transform > ref + v-for 1`] = `
"
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = _createFor(() => ([1,2,3]), (_for_item0) => {
    const n2 = t0()
    let r2
    _renderEffect(() => r2 = _setTemplateRef(n2, foo, r2, true))
    return n2
  }, void 0, 4)
  return n0
"
`;

exports[`compiler: template ref transform > ref + v-if 1`] = `
"
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = _createIf(() => (true), () => {
    const n2 = t0()
    let r2
    _renderEffect(() => r2 = _setTemplateRef(n2, foo, r2))
    return n2
  }, null, true)
  return n0
"
`;

exports[`compiler: template ref transform > static ref 1`] = `
"
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = t0()
  _setTemplateRef(n0, "foo")
  return n0
"
`;
