// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: v-for > array de-structured value (with rest) 1`] = `
"
  const n0 = _createFor(() => (list), (_for_item0, _for_key0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value[0] + _for_item0.value.slice(1) + _for_key0.value))
    return n2
  }, ([id, ...other], index) => (id))
  return n0
"
`;

exports[`compiler: v-for > array de-structured value 1`] = `
"
  const n0 = _createFor(() => (list), (_for_item0, _for_key0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value[0] + _for_item0.value[1] + _for_key0.value))
    return n2
  }, ([id, other], index) => (id))
  return n0
"
`;

exports[`compiler: v-for > basic v-for 1`] = `
"
  const n0 = _createFor(() => (items), (_for_item0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value))
    n2.$evtclick = () => remove(_for_item0.value)
    return n2
  }, (item) => (item.id))
  return n0
"
`;

exports[`compiler: v-for > fast-remove flag 1`] = `
"
  const n3 = t1()
  _setInsertionState(n3)
  const n0 = _createFor(() => (i), (_for_item0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value+i))
    return n2
  }, undefined, 1)
  return n3
"
`;

exports[`compiler: v-for > key only binding pattern 1`] = `
"
  const n0 = _createFor(() => (rows), (_for_item0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value.id + _for_item0.value.id))
    return n2
  }, (row) => (row.id))
  return n0
"
`;

exports[`compiler: v-for > multi effect 1`] = `
"
  const n0 = _createFor(() => (items), (_for_item0, _for_key0) => {
    const n2 = t0()
    _renderEffect(() => {
      _setProp(n2, "item", _for_item0.value)
      _setProp(n2, "index", _for_key0.value)
    })
    return n2
  })
  return n0
"
`;

exports[`compiler: v-for > nested v-for 1`] = `
"
  const n0 = _createFor(() => (list), (_for_item0) => {
    const n5 = t1()
    _setInsertionState(n5)
    const n2 = _createFor(() => (_for_item0.value), (_for_item1) => {
      const n4 = t0()
      const x4 = _child(n4)
      _setNodes(x4, () => (_for_item1.value+_for_item0.value))
      return n4
    }, undefined, 1)
    return n5
  })
  return n0
"
`;

exports[`compiler: v-for > object de-structured value (with rest) 1`] = `
"
  const n0 = _createFor(() => (list), (_for_item0, _for_key0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value.id + _getRestElement(_for_item0.value, ["id"]) + _for_key0.value))
    return n2
  }, ({ id, ...other }, index) => (id))
  return n0
"
`;

exports[`compiler: v-for > object de-structured value 1`] = `
"
  const n0 = _createFor(() => (items), (_for_item0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value.id), () => (_for_item0.value.value))
    return n2
  }, ({ id, value }) => (id))
  return n0
"
`;

exports[`compiler: v-for > object value, key and index 1`] = `
"
  const n0 = _createFor(() => (items), (_for_item0, _for_key0, _for_index0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (id), () => (_for_item0.value), () => (_for_index0.value))
    return n2
  }, (value, key, index) => (id))
  return n0
"
`;

exports[`compiler: v-for > selector pattern 1`] = `
"
  let _selector0_0
  const n0 = _createFor(() => (rows), (_for_item0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _selector0_0(() => {
      _setText(x2, _toDisplayString(selected === _for_item0.value.id ? 'danger' : ''))
    })
    return n2
  }, (row) => (row.id), undefined, ({ createSelector }) => {
    _selector0_0 = createSelector(() => selected)
  })
  return n0
"
`;

exports[`compiler: v-for > selector pattern 2`] = `
"
  let _selector0_0
  const n0 = _createFor(() => (rows), (_for_item0) => {
    const n2 = t0()
    _selector0_0(() => {
      _setClass(n2, selected === _for_item0.value.id ? 'danger' : '')
    })
    return n2
  }, (row) => (row.id), undefined, ({ createSelector }) => {
    _selector0_0 = createSelector(() => selected)
  })
  return n0
"
`;

exports[`compiler: v-for > selector pattern 3`] = `
"
  const n0 = _createFor(() => (rows), (_for_item0) => {
    const n2 = t0()
    _renderEffect(() => _setClass(n2, _for_item0.value.label === _for_item0.value.id ? 'danger' : ''))
    return n2
  }, (row) => (row.id))
  return n0
"
`;

exports[`compiler: v-for > selector pattern 4`] = `
"
  let _selector0_0
  const n0 = _createFor(() => (rows), (_for_item0) => {
    const n2 = t0()
    _selector0_0(() => {
      _setClass(n2, { danger: _for_item0.value.id === selected })
    })
    return n2
  }, (row) => (row.id), undefined, ({ createSelector }) => {
    _selector0_0 = createSelector(() => selected)
  })
  return n0
"
`;

exports[`compiler: v-for > v-for aliases w/ complex expressions 1`] = `
"
  const n0 = _createFor(() => (list), (_for_item0) => {
    const n2 = t0()
    const x2 = _child(n2)
    _setNodes(x2, () => (_for_item0.value.foo + baz + _for_item0.value.baz[0]))
    return n2
  })
  return n0
"
`;

exports[`compiler: v-for > v-for on component 1`] = `
"
  const n0 = _createFor(() => (list), (_for_item0) => {
    const n3 = _createComponent(Comp)
    const n2 = _child(n3)
    _setNodes(n2, () => (_for_item0.value))
    return [n2, n3]
  }, undefined, 2)
  return n0
"
`;

exports[`compiler: v-for > v-for on template with single component child 1`] = `
"
  const n0 = _createFor(() => (list), (_for_item0) => {
    const n3 = _createComponent(Comp)
    const n2 = _child(n3)
    _setNodes(n2, () => (_for_item0.value))
    return [n2, n3]
  }, undefined, 2)
  return n0
"
`;
