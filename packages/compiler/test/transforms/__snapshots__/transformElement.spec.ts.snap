// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: element transform > {...obj} 1`] = `
"
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [obj], true))
  return n0
"
`;

exports[`compiler: element transform > {...obj} after static prop 1`] = `
"
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [{ id: "foo" }, obj], true))
  return n0
"
`;

exports[`compiler: element transform > {...obj} before static prop 1`] = `
"
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [obj, { id: "foo" }], true))
  return n0
"
`;

exports[`compiler: element transform > {...obj} between static props 1`] = `
"
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [{ id: "foo" }, obj, { class: "bar" }], true))
  return n0
"
`;

exports[`compiler: element transform > component > {...obj} 1`] = `
"
  const n0 = _createComponent(Foo, { $: [
    () => (obj)
  ] }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > {...obj} after static prop 1`] = `
"
  const n0 = _createComponent(Foo, {
    id: () => ("foo"),
    $: [
      () => (obj)
    ]
  }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > {...obj} before static prop 1`] = `
"
  const n0 = _createComponent(Foo, { $: [
    () => (obj),
    { id: () => ("foo") }
  ] }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > {...obj} between static props 1`] = `
"
  const n0 = _createComponent(Foo, {
    id: () => ("foo"),
    $: [
      () => (obj),
      { class: () => ("bar") }
    ]
  }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > Fragment should not mark as single root 1`] = `
"
  const n0 = _createComponent(Comp)
  return n0
"
`;

exports[`compiler: element transform > component > component event with once modifier 1`] = `
"
  const n0 = _createComponent(Foo, { onFooOnce: () => bar }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > component with fallback 1`] = `
"
  const _component_foo_bar = _resolveComponent("foo-bar")
  const n0 = _createComponentWithFallback(_component_foo_bar, null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > generate multi root component 1`] = `
"
  const n0 = _createComponent(Comp)
  const n1 = t0()
  return [n0, n1]
"
`;

exports[`compiler: element transform > component > generate single root component 1`] = `
"
  const n0 = _createComponent(Comp, null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > import + resolve component 1`] = `
"
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > props merging: class 1`] = `
"
  const n0 = _createComponent(Foo, { class: () => (["foo", { bar: isBar }]) }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > props merging: style 1`] = `
"
  const n0 = _createComponent(Foo, { style: () => (["color: green", { color: 'red' }]) }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > resolve namespaced component 1`] = `
"
  const n0 = _createComponent(Foo.Example, null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > static props 1`] = `
"
  const n0 = _createComponent(Foo, {
    id: () => ("foo"),
    class: () => ("bar")
  }, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > v-for on component should not mark as single root 1`] = `
"
  const n0 = _createFor(() => (items), (_for_item0) => {
    const n2 = _createComponent(Comp)
    return n2
  }, (item) => (item), 2)
  return n0
"
`;

exports[`compiler: element transform > component > v-on={obj} 1`] = `
"
  const n0 = _createComponent(Foo, { $: [
    () => (_toHandlers(obj))
  ] }, null, true)
  return n0
"
`;

exports[`compiler: element transform > invalid html nesting 1`] = `
"
  const n1 = t1()
  const n0 = t0()
  const n4 = t2()
  const n3 = t2()
  _insert(n0, n1)
  _insert(n3, n4)
  return [n1, n4]
"
`;

exports[`compiler: element transform > number value 1`] = `
"
  const n0 = t0()
  return n0
"
`;

exports[`compiler: element transform > props + children 1`] = `
"
  const n0 = t0()
  return n0
"
`;

exports[`compiler: element transform > props merging: class 1`] = `
"
  const n0 = t0()
  _renderEffect(() => _setClass(n0, ["foo", { bar: isBar }]))
  return n0
"
`;

exports[`compiler: element transform > props merging: event handlers 1`] = `
"
  const n0 = t0()
  _delegate(n0, "click", _withKeys(e => a(e), ["foo"]))
  _delegate(n0, "click", _withKeys(e => b(e), ["bar"]))
  return n0
"
`;

exports[`compiler: element transform > props merging: style 1`] = `
"
  const n0 = t0()
  _setStyle(n0, ["color: green", { color: 'red' }])
  return n0
"
`;

exports[`compiler: element transform > static props 1`] = `
"
  const n0 = t0()
  return n0
"
`;

exports[`compiler: element transform > v-on="obj" 1`] = `
"
  const n0 = t0()
  _renderEffect(() => _setDynamicEvents(n0, obj))
  return n0
"
`;
